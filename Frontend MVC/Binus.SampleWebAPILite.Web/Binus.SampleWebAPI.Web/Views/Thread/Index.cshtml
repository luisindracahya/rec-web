@model Binus.SampleWebAPI.Web.ViewModels.ThreadViewModel
@{
    ViewBag.Title = "Thread";
    string Address = Request.Url.Scheme + "://" + Request.Url.Authority + Request.ApplicationPath.TrimEnd('/');
}

<!DOCTYPE html>



@* Insert *@
@using (Ajax.BeginForm("CreateThread", "Thread", new AjaxOptions {
    HttpMethod = "POST",
    OnSuccess = "LoadResult(data)"
}, new { id = "form-create-thread", enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div id="insertModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    <div class="row Data">
                        <div class="col-sm-12">
                            <div class="alert alert-info alert-dismissable" id="iMessageContainer">
                                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                                <span id="Message"></span>
                            </div>
                            <input type="hidden" name="UserID" value="" id="itxtUserID" />
                            <div class="form-group">
                                <label for="txtTitle">Title</label>
                                <input type="text" name="Title" placeholder="Title" class="form-control input-lg" required id="itxtTitle" />
                            </div>
                            <div class="form-group">
                                <label for="txtContent">Content</label>
                                <input type="text" name="Content" placeholder="Content" class="form-control input-lg" required id="itxtContent" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="submit-thread" class="btn btn-danger">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<script src="@Address/Sources/Scripts/jquery-3.1.1.min.js"></script>
<script src="@Address/Sources/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="@Address/Sources/Scripts/jquery.form.js"></script>
<script src="@Address/Sources/Scripts/bootstrap.js"></script>
<script src="@Address/Sources/Scripts/respond.js"></script>
<script src="~/Sources/PageJS/Backend/thread.js"></script>




@*-----------------*@


<link rel="stylesheet" href="~/Sources/CustomCSS/index.css">

<script src="~/Sources/PageJS/index.js"></script>

<div class="layout-header p-3">
    <div class="text-white">
        <h3>
            <i>Announcement</i>
            <label class="switch">
                <input type="checkbox" name="c1" onclick="myFunction()">
                <span class="slider round"></span>
            </label>
        </h3>
    </div>
</div>
<div id="myDIV" class="layout-content p-5 text-justify h-50">

    @try {

        foreach (var Data in Model.ListThread) {
            if (Data.Role == "admin") {
                <div class="card-box w-25 overflow-hidden h-75">
                    <h4>@Html.ActionLink(@Data.Title, "ToPost", Data) by @Data.Name</h4>
                    <br />
                    <p>@Data.Content</p>
                </div>
            }
        }
    } catch (Exception ex) {
        throw ex;
    }
</div>

<div class="layout-header p-3">
    <div class="text-white">
        <h3>
            <i>Thread</i>
            <label class="switch">
                <input type="checkbox" name="c1" onclick="myFunction2()">
                <span class="slider round"></span>
            </label>
        </h3>
    </div>
</div>
<div id="myDIV2" class="layout-content p-5 text-justify h-50">

    @try {

        foreach (var Data in Model.ListThread) {
            if (Data.Role == "approved") {
                <div class="card-box w-25 overflow-hidden h-75">
                    <h4>@Html.ActionLink(@Data.Title, "ToPost", Data) by @Data.Name</h4>
                    <br />
                    <p>@Data.Content</p>
                </div>
            }
        }
    } catch (Exception ex) {
        throw ex;
    }
</div>

<button type="button" class="btn btn-primary rounded-circle floating-button" data-toggle="modal"
        data-target="#insertModal">
    <i class="far fa-comment text-white"></i>
</button>